@import "./styles/constants.scss";

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

// FONT
@font-face {
  font-family: "Impact";
  src: local("Impact"), url("./styles/Impact.ttf") format("truetype");
}

.App {
  background-color: $backgroundColor;
  color: $contentColor;
  min-height: 100vh;
  min-height: calc(var(--vh, 1vh) * 100);
  min-width: 100vw;
  max-width: 100vw;
  @include flexFour(column, center, center);
}

.game {
  @include flexFour(column, center, center);
  padding: 1rem;
  margin: auto 0;
  position: relative;
  max-width: 100%;
}

.game-row {
  display: grid;
  grid-template-columns: repeat(5, 1fr);
  max-width: 100%;
}

.game-tile {
  border: 1px solid $gameTileBorderColor;
  margin: 0.2rem;
  width: 4.8rem;
  height: 4.8rem;
  text-align: center;
  font-size: 3rem;
  @include flexFour(column, center, center);
  font-weight: 800;
}

.keyboard {
  min-height: 10vh;
  background-color: $keyboardBkgColor;
  padding: 0.2rem 0.1rem;
  min-width: 100vw;
}

.key-row {
  @include flexFour(row, center, center);
  max-width: 100%;
  overflow: hidden;
}

.key {
  background-color: $keyboardKeyBkgColor;
  color: $keyboardKeysColor;
  border: none;
  border-radius: 5px;
  width: 2.5rem;
  height: 3rem;
  margin: 0.2rem 0.2rem;
  font-size: 1.2rem;
  font-weight: 600;
  cursor: pointer;
}

.wide-key {
  min-width: 3rem;
  font-size: 0.8rem;
}

.popup-window {
  position: fixed;
  max-width: 100%;
  top: 5.5rem;
  background-color: $popupBkgColor;
  color: $popupContentColor;
  font-size: 1.2rem;
  font-weight: 600;
  text-align: center;
  padding: 0.5rem 1rem;
  border-radius: 5px;
  animation: fade 4s;
}

.name {
  font-size: 0.8rem;
  padding: 0.5rem 0.1rem;
  margin-bottom: 1rem;
}

@media only screen and (min-width: 320px) and (max-width: 648px) {
  .game {
    max-width: 100vw;
    width: 100%;
    padding: 0.5rem 1rem;
  }

  .game-row {
    max-width: 100vw;
  }

  .game-tile {
    width: 3.5rem;
    height: 3.5rem;
    width: calc((100vw - (0.2rem * 10) - 4.5rem) / 5);
    height: calc((100vw - (0.2rem * 10) - 4.5rem) / 5);
    max-width: 60px;
    max-height: 60px;
    font-size: 2.5rem;
    font-size: calc((100vw - (0.2rem * 10) - 10rem) / 5);
  }

  .keyboard {
    width: 100%;
    padding: 0.1rem 0.1rem;
  }
  .key {
    width: 2rem;
  }

  .name {
    padding: 0.1rem 0.1rem;
    margin-bottom: 0.2rem;
  }

  .popup-window {
    top: 0.5rem;
    font-size: 1rem;
    padding: 0.5rem 1rem;
  }
}

@media only screen and (max-width: 320px) {
  .game {
    max-width: 100vw;
    width: 100%;
    padding: 0.5rem 1rem;
  }

  .game-row {
    max-width: 100vw;
  }
  .game-tile {
    width: 1.5rem;
    height: 1.5rem;
    width: calc((100vh - (0.2rem * 10) - 5rem) / 5);
    height: calc((100vh - (0.2rem * 10) - 5rem) / 5);
    max-width: 25px;
    max-height: 25px;
    font-size: 1rem;
    font-size: calc((100vh - (0.2rem * 10) - 28rem) / 5);
  }
  .keyboard {
    width: 100%;
    padding: 0.1rem 0.1rem;
  }
  .key {
    width: 2rem;
  }

  .name {
    padding: 0.1rem 0.1rem;
    margin-bottom: 0.2rem;
  }

  .popup-window {
    top: 0.5rem;
    font-size: 1rem;
    padding: 0.5rem 1rem;
  }
}

@media only screen and (orientation: landscape) and (hover: none) {
  .game-tile {
    width: 3.5rem;
    height: 3.5rem;
    width: calc((100vh - (0.2rem * 10) - 4.5rem) / 5);
    height: calc((100vh - (0.2rem * 10) - 4.5rem) / 5);
    max-width: 60px;
    max-height: 60px;
    font-size: 2.5rem;
    font-size: calc((100vh - (0.2rem * 10) - 10rem) / 5);
  }

  .keyboard {
    padding-bottom: 0;
  }
}
